import os 
import sys
import math
import copy 
import statistics

def extract_number(s):
    return int("".join(filter(str.isdigit, s)))

# take the average of all the trial runs and produce a new set of files to be able to generate a graph

# provide absolute path for where the output files generated by run.sh/local.sh are 
location_of_data = sys.argv[1]

# provide the number of trial runs you have performed
trial_runs = int(sys.argv[2])

# number of data points you have ran your experiment for
data_points = int(sys.argv[3])

# provide the output folder for where you want your files to go
output = sys.argv[4]

int_to_session = {0: "eventual", 1: "writes follow reads", 2: "monotonic writes", 3: "monotonic reads", 4: "read my writes", 5: "causal"}
configs = ["PrimaryBackUpRoundRobin", "GossipRandom", "PinnedRoundRobin", "PrimaryBackUpRandom"]
workloads = ["5", "50", "95"]

for config in configs:
    for workload in workloads:
        file = os.path.join(location_of_data, config, f"workload_{workload}")
        for session in range(0, 6): 
            for i in range(1, trial_runs+1):
                tempThroughput = []
                tempLatency = []
                for run in range(1, data_points + 1):
                    f = open(os.path.join(file, str(session), f"run_{run}", str(i)), "r") 
                    contents = f.read().splitlines()
                    throughput = extract_number(contents[3])
                    latency = extract_number(contents[4])
                    tempThroughput.append(throughput)
                    tempLatency.append(latency)
                
                folder = os.path.join(output, config, f"workload_{workload}", int_to_session[session])
                if not os.path.exists(folder):
                    os.makedirs(folder)
                            
                w = open(os.path.join(output, config, f"workload_{workload}", int_to_session[session], f"{i}.txt"), "w")
                w.write("Throughput: " + str(int(statistics.mean(tempThroughput))) + "\n")
                w.write("Latency: " + str(int(statistics.mean(tempLatency))))